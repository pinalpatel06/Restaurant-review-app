{"version":3,"sources":["service-worker.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","promisifyRequest","request","Promise","resolve","reject","onsuccess","result","onerror","error","promisifyRequestCall","obj","method","args","apply","then","proxyProperties","ProxyClass","targetProp","properties","forEach","prop","Object","defineProperty","prototype","get","this","set","val","proxyRequestMethods","Constructor","arguments","proxyMethods","proxyCursorRequestMethods","value","Cursor","Index","index","_index","cursor","_cursor","_request","ObjectStore","store","_store","Transaction","idbTransaction","_tx","complete","oncomplete","onabort","UpgradeDB","db","oldVersion","transaction","_db","DB","IDBIndex","IDBCursor","methodName","createIndex","IDBObjectStore","objectStore","IDBTransaction","createObjectStore","IDBDatabase","funcName","replace","arr","Array","slice","callback","nativeObject","getAll","query","count","instance","items","iterateCursor","push","undefined","continue","exp","open","name","version","upgradeCallback","indexedDB","onupgradeneeded","event","delete","default","self","idb","2","_idb","_idb2","__esModule","restaurantStore","dbPromise","upgradeDB","keyPath","CACHE","DATABASE_URL","URL","restaurants","fetchFromNetwork","console","log","url","fetch","response","clone","caches","cache","put","addEventListener","waitUntil","addAll","fetchAllData","keys","cacheNames","all","map","cacheName","startsWith","host","respondWith","fetchData","includes","match","ignoreSearch","body","catch","fetchDataFromAPI","status","text","json","data","restaurant","err","message","requestURL","pathname","Response","JSON","stringify","statusText","id","split"],"mappings":"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","file":"service-worker.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n'use strict';\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      // Don't create iterateKeyCursor if openKeyCursor doesn't exist.\n      if (!(funcName in Constructor.prototype)) return;\n\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      if (request) {\n        request.onupgradeneeded = function(event) {\n          if (upgradeCallback) {\n            upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n          }\n        };\n      }\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (typeof module !== 'undefined') {\n    module.exports = exp;\n    module.exports.default = module.exports;\n  }\n  else {\n    self.idb = exp;\n  }\n}());\n\n},{}],2:[function(require,module,exports){\n'use strict';\n\nvar _idb = require('idb');\n\nvar _idb2 = _interopRequireDefault(_idb);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar IDB_NAME = 'restaurant-reviews';\nvar IDB_VERSION = 1;\nvar restaurantStore = 'restaurants';\n\nvar dbPromise = _idb2.default.open(IDB_NAME, IDB_VERSION, function (upgradeDB) {\n  upgradeDB.createObjectStore(restaurantStore, { keyPath: 'id' });\n});\n\n/**\n * Use Network or Cachce Recipe from ServiceWorker Cookbook\n */\n\n// Update the cache name to force replacement.\nvar CACHE = 'restaurant-reviews-v3';\n\nvar DATABASE_PORT = 1337;\nvar DATABASE_URL = new URL('http://localhost:' + DATABASE_PORT + '/restaurants');\n\nvar restaurants = [];\n\nself.addEventListener('install', function (event) {\n  console.log('The service worker is being installed.');\n\n  event.waitUntil(precache());\n  event.waitUntil(fetchAllData());\n});\n\nself.addEventListener('activate', function (event) {\n  console.log('The service worker is being activated.');\n\n  // Purge old cache versions upon activation\n  // Only purge if it is a 'restaurant-reviews' cache.\n  event.waitUntil(caches.keys().then(function (cacheNames) {\n    return Promise.all(cacheNames.map(function (cacheName) {\n      if (cacheName != CACHE && cacheName.startsWith('restaurant-reviews')) {\n        console.log('Deleting out of date cache:', cacheName);\n        return caches.delete(cacheName);\n      }\n    }));\n  }));\n});\n\n// Intercept fetch events and serve from cache if available.\nself.addEventListener('fetch', function (event) {\n  var requestURL = new URL(event.request.url);\n\n  if (requestURL.host === DATABASE_URL.host) {\n    event.respondWith(fetchData(event.request));\n  } else if (!event.request.url.includes('browser-sync')) {\n    console.log('The service worker is serving the asset: ' + event.request.url);\n\n    event.respondWith(caches.match(event.request, { ignoreSearch: true }).then(function (response) {\n      console.log(\"Serving response from cache:\", event.request.url);\n      if (response && response != undefined && response.body) {\n        return response;\n      } else {\n        return fetchFromNetwork(event.request);\n      }\n    }).catch(function () {\n      return fetchFromNetwork(event.request);\n    }));\n  } else {\n    return fetch(event.request);\n  }\n});\n\n// Pre-cache the local files.\nfunction precache() {\n  console.log('Service worker precache.');\n  return caches.open(CACHE).then(function (cache) {\n    return cache.addAll(['./', './restaurant.html', './css/styles.min.css', './index.min.js', './js/main.min.js', './js/restaurant_info.min.js']);\n  });\n}\n\n// Fetch from the network if cache was not available.\nfunction fetchFromNetwork(request) {\n  console.log('Fetching asset from network:', request.url);\n  return fetch(request).then(function (response) {\n    var r = response.clone();\n    if (request.method == \"GET\") {\n      console.log('Caching response:', request.url);\n      caches.open(CACHE).then(function (cache) {\n        console.log('Opened cache:', CACHE);\n        cache.put(request, r);\n      });\n    }\n    return response;\n  });\n}\n\n// Fetch all restaurants using variable, IndexedDB, or API.\nvar fetchAllData = function fetchAllData() {\n\n  if (0 < restaurants.length) {\n    return restaurants;\n  } else {\n    // First, check IndexedDB\n    return dbPromise.then(function (db) {\n      return db.transaction(restaurantStore).objectStore(restaurantStore).getAll().then(function (r) {\n        if (r && 0 < r.length) {\n          restaurants = r;\n          return restaurants;\n        } else {\n          return fetchDataFromAPI();\n        }\n      })\n      // Fetch restaurants from API\n      .catch(function () {\n        return fetchDataFromAPI();\n      });\n    });\n  }\n};\n\nvar fetchDataFromAPI = function fetchDataFromAPI() {\n  return fetch(DATABASE_URL).then(function (response) {\n    if (!response) {\n      return {\n        status: 500,\n        error: 'Null response returned from restaurant API'\n      };\n    } else if (response.status !== 200) {\n      return response.text().then(function (text) {\n        return {\n          status: response.status,\n          error: text\n        };\n      });\n    } else {\n      return response.json().then(function (data) {\n        restaurants = data;\n        restaurants.forEach(function (restaurant) {\n          dbPromise.then(function (db) {\n            var tx = db.transaction(restaurantStore, 'readwrite');\n            tx.objectStore(restaurantStore).put(restaurant);\n          });\n        });\n        return restaurants;\n      });\n    }\n  }).catch(function (err) {\n    return {\n      status: 500,\n      error: 'Failed to retrieve restaurant data from API:\\n' + err.message\n    };\n  });\n};\n\nvar fetchData = function fetchData(request) {\n  console.log('Fetching data: ', request.url);\n\n  var requestURL = new URL(request.url);\n\n  if (requestURL.pathname == '/restaurants') {\n    console.log('Fetching all restaurants');\n    if (0 < restaurants.length) {\n      console.log('ServiceWorker fetching restaurants from variable.');\n      return new Response(JSON.stringify(restaurants), { status: 200, statusText: 'OK' });\n    } else {\n      return new Response(JSON.stringify(fetchAllData()), { status: 200, statusText: 'OK' });\n    }\n  } else {\n    var id = requestURL.pathname.split[2];\n    console.log('ServiceWorker Fetching restaurant from IndexedDB by id: ', id);\n    return dbPromise.then(function (db) {\n      return db.transaction(restaurantStore).objectStore(restaurantStore).get(id);\n    });\n  }\n};\n\n},{\"idb\":1}]},{},[2]);\n"]}