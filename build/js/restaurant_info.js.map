{"version":3,"sources":["js/restaurant_info.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","window","initMap","fetchRestaurantFromURL","error","restaurant","console","self","map","google","maps","Map","document","getElementById","zoom","center","latlng","scrollwheel","fillBreadcrumb","DBHelper","mapMarkerForRestaurant","callback","id","getParameterByName","fetchRestaurantById","fillRestaurantHTML","arguments","undefined","innerHTML","name","address","image","className","src","imageUrlForRestaurant","alt","cuisine_type","operating_hours","fillRestaurantHoursHTML","fillReviewsHTML","operatingHours","hours","key","row","createElement","day","appendChild","time","reviews","container","title","noReviews","ul","forEach","review","createReviewHTML","li","reviewHead","date","rating","spanRate","align","comments","breadcrumb","url","location","href","replace","results","RegExp","exec","decodeURIComponent"],"mappings":"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","file":"restaurant_info.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n'use strict';\n\nvar restaurant = void 0;\nvar map;\n\n/**\n * Initialize Google map, called from HTML.\n */\nwindow.initMap = function () {\n  fetchRestaurantFromURL(function (error, restaurant) {\n    if (error) {\n      // Got an error!\n      console.error(error);\n    } else {\n      self.map = new google.maps.Map(document.getElementById('map'), {\n        zoom: 16,\n        center: restaurant.latlng,\n        scrollwheel: false\n      });\n      fillBreadcrumb();\n      DBHelper.mapMarkerForRestaurant(self.restaurant, self.map);\n    }\n  });\n};\n\n/**\n * Get current restaurant from page URL.\n */\nfetchRestaurantFromURL = function fetchRestaurantFromURL(callback) {\n  if (self.restaurant) {\n    // restaurant already fetched!\n    callback(null, self.restaurant);\n    return;\n  }\n  var id = getParameterByName('id');\n  if (!id) {\n    // no id found in URL\n    error = 'No restaurant id in URL';\n    callback(error, null);\n  } else {\n    DBHelper.fetchRestaurantById(id, function (error, restaurant) {\n      self.restaurant = restaurant;\n      if (!restaurant) {\n        console.error(error);\n        return;\n      }\n      fillRestaurantHTML();\n      callback(null, restaurant);\n    });\n  }\n};\n\n/**\n * Create restaurant HTML and add it to the webpage\n */\nfillRestaurantHTML = function fillRestaurantHTML() {\n  var restaurant = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : self.restaurant;\n\n  var name = document.getElementById('restaurant-name');\n  name.innerHTML = restaurant.name;\n\n  var address = document.getElementById('restaurant-address');\n  address.innerHTML = restaurant.address;\n\n  var image = document.getElementById('restaurant-img');\n  image.className = 'restaurant-img';\n  image.src = DBHelper.imageUrlForRestaurant(restaurant);\n  image.alt = restaurant.name + ' restaurant image is shown here. It shows how its ambience.';\n\n  var cuisine = document.getElementById('restaurant-cuisine');\n  cuisine.innerHTML = restaurant.cuisine_type;\n\n  // fill operating hours\n  if (restaurant.operating_hours) {\n    fillRestaurantHoursHTML();\n  }\n  // fill reviews\n  fillReviewsHTML();\n};\n\n/**\n * Create restaurant operating hours HTML table and add it to the webpage.\n */\nfillRestaurantHoursHTML = function fillRestaurantHoursHTML() {\n  var operatingHours = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : self.restaurant.operating_hours;\n\n  var hours = document.getElementById('restaurant-hours');\n  for (var key in operatingHours) {\n    var row = document.createElement('tr');\n\n    var day = document.createElement('td');\n    day.innerHTML = key;\n    row.appendChild(day);\n\n    var time = document.createElement('td');\n    time.innerHTML = operatingHours[key];\n    row.appendChild(time);\n\n    hours.appendChild(row);\n  }\n};\n\n/**\n * Create all reviews HTML and add them to the webpage.\n */\nfillReviewsHTML = function fillReviewsHTML() {\n  var reviews = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : self.restaurant.reviews;\n\n  var container = document.getElementById('reviews-container');\n  var title = document.createElement('h3');\n  title.innerHTML = 'Reviews';\n  title.className = 'review';\n  container.appendChild(title);\n\n  if (!reviews) {\n    var noReviews = document.createElement('p');\n    noReviews.innerHTML = 'No reviews yet!';\n    container.appendChild(noReviews);\n    return;\n  }\n  var ul = document.getElementById('reviews-list');\n  reviews.forEach(function (review) {\n    ul.appendChild(createReviewHTML(review));\n  });\n  container.appendChild(ul);\n};\n\n/**\n * Create review HTML and add it to the webpage.\n */\ncreateReviewHTML = function createReviewHTML(review) {\n  var li = document.createElement('li');\n  var reviewHead = document.createElement('div');\n  reviewHead.className = 'review-head';\n  var name = document.createElement('div');\n  name.innerHTML = review.name;\n  name.className = 'reviewer-name';\n  reviewHead.appendChild(name);\n\n  var date = document.createElement('div');\n  date.innerHTML = review.date;\n  date.className = 'review-date';\n  reviewHead.appendChild(date);\n\n  li.appendChild(reviewHead);\n\n  var rating = document.createElement('p');\n  var spanRate = document.createElement('span');\n  spanRate.innerHTML = 'Rating: ' + review.rating;\n  spanRate.className = 'review-rate';\n  rating.appendChild(spanRate);\n  rating.align = 'left';\n  li.appendChild(rating);\n\n  var comments = document.createElement('p');\n  comments.innerHTML = review.comments;\n  li.appendChild(comments);\n\n  return li;\n};\n\n/**\n * Add restaurant name to the breadcrumb navigation menu\n */\nfillBreadcrumb = function fillBreadcrumb() {\n  var restaurant = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : self.restaurant;\n\n  var breadcrumb = document.getElementById('breadcrumb');\n  var li = document.createElement('li');\n  li.innerHTML = restaurant.name;\n  breadcrumb.appendChild(li);\n};\n\n/**\n * Get a parameter by name from page URL.\n */\ngetParameterByName = function getParameterByName(name, url) {\n  if (!url) url = window.location.href;\n  name = name.replace(/[\\[\\]]/g, '\\\\$&');\n  var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n      results = regex.exec(url);\n  if (!results) return null;\n  if (!results[2]) return '';\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n};\n\n},{}]},{},[1]);\n"]}