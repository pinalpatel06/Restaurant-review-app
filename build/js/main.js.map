{"version":3,"sources":["js/main.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","Object","defineProperty","value","updateRestaurants","undefined","_dbhelper","restaurantDB","DBHelper","L","document","addEventListener","event","initMap","fetchNeighborhoods","then","neighborhoods","fillNeighborhoodsHTML","fetchCuisines","cuisines","fillCuisinesHTML","select","getElementById","forEach","neighborhood","idx","option","createElement","id","innerHTML","setAttribute","append","cuisine","self","newMap","map","center","zoom","scrollWheelZoom","tileLayer","mapboxToken","maxZoom","attribution","addTo","cSelect","nSelect","cIndex","selectedIndex","nIndex","fetchRestaurantsByCuisineAndNeighborhood","restaurants","resetRestaurants","fillRestaurantsHTML","markers","m","remove","ul","restaurant","createRestaurantHTML","addMarkersToMap","removeMapAttributionsFromTabOrder","querySelectorAll","link","li","image","className","src","imageUrlForRestaurant","replace","alt","image_desc","name","address","more","moreP","href","urlForRestaurant","marker","mapMarkerForRestaurant","on","window","location","options","url","push","../lib/dbhelper.js","2","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","instance","TypeError","_classCallCheck","this","fetch","response","json","data","includes","cuisine_type","filter","photograph","latlng","lat","lng","title"],"mappings":"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","file":"main.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.updateRestaurants = undefined;\n\nvar _dbhelper = require('../lib/dbhelper.js');\n\nvar newMap = void 0; /*\n                      * 2018-06-15\n                      *  - Add code for alt attributes on images. Use image_desc if available.\n                      *    If not, use restaruant name.\n                      */\n\nvar markers = [];\n\nvar restaurantDB = new _dbhelper.DBHelper();\n\nvar mapAvailable = L;\n\n/**\n * Fetch neighborhoods and cuisines as soon as the page is loaded.\n */\ndocument.addEventListener('DOMContentLoaded', function (event) {\n  initMap(); // added\n  //  fetchNeighborhoods();\n  //  fetchCuisines();\n  // Just call the DBHelper methods directly as wrapping them in a function\n  // in this instance does not add value\n  restaurantDB.fetchNeighborhoods().then(function (neighborhoods) {\n    return fillNeighborhoodsHTML(neighborhoods);\n  });\n  restaurantDB.fetchCuisines().then(function (cuisines) {\n    return fillCuisinesHTML(cuisines);\n  });\n});\n\n/**\n * Fetch all neighborhoods and set their HTML.\n */\n/* Wrapping the DBHelper calls in a function does not add value\nconst fetchNeighborhoods = () => {\n  restaurantDB.fetchNeighborhoods().then(neighborhoods => fillNeighborhoodsHTML(neighborhoods));\n}\n*/\n\n/**\n * Set neighborhoods HTML.\n */\n//const fillNeighborhoodsHTML = (neighborhoods = self.neighborhoods) => {\nvar fillNeighborhoodsHTML = function fillNeighborhoodsHTML(neighborhoods) {\n  var select = document.getElementById('neighborhoods-select');\n  neighborhoods.forEach(function (neighborhood, idx) {\n    var option = document.createElement('option');\n    option.id = \"neighborhood-\" + idx;\n    option.innerHTML = neighborhood;\n    option.value = neighborhood;\n    option.setAttribute('role', 'option');\n    option.setAttribute('aria-selected', 'false');\n    select.append(option);\n  });\n};\n\n/**\n * Fetch all cuisines and set their HTML.\n */\n/* Wrapping the DBHelper call in a function does not add value\nconst fetchCuisines = () => {\n restaurantDB.fetchCuisines().then(cuisines => fillCuisinesHTML(cuisines));\n}\n*/\n\n/**\n * Set cuisines HTML.\n */\n//const fillCuisinesHTML = (cuisines = self.cuisines) => {\nvar fillCuisinesHTML = function fillCuisinesHTML(cuisines) {\n  var select = document.getElementById('cuisines-select');\n\n  cuisines.forEach(function (cuisine, idx) {\n    var option = document.createElement('option');\n    option.id = \"cuisine-\" + idx;\n    option.innerHTML = cuisine;\n    option.value = cuisine;\n    option.setAttribute('role', 'option');\n    option.setAttribute('aria-selected', 'false');\n    select.append(option);\n  });\n};\n\n/**\n * Initialize leaflet map, called from HTML.\n */\nvar initMap = function initMap() {\n  self.newMap = L.map('map', {\n    center: [40.722216, -73.987501],\n    zoom: 12,\n    scrollWheelZoom: false\n  });\n  L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.jpg70?access_token={mapboxToken}', {\n    mapboxToken: 'pk.eyJ1Ijoic2RjcnVubmVyIiwiYSI6ImNqaWJyZXp5dTB4bWozbHM2YjZrdW43MjMifQ.EowtKHnQ02BnpcwWvnJNWA',\n    maxZoom: 18,\n    attribution: 'Map data © <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, ' + '<a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, ' + 'Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n    id: 'mapbox.streets'\n  }).addTo(self.newMap);\n\n  newMap = self.newMap;\n\n  updateRestaurants();\n  /*  else {\n      document.getElementById()\n    }\n  */\n};\n/* window.initMap = () => {\n  let loc = {\n    lat: 40.722216,\n    lng: -73.987501\n  };\n  self.map = new google.maps.Map(document.getElementById('map'), {\n    zoom: 12,\n    center: loc,\n    scrollwheel: false\n  });\n  updateRestaurants();\n} */\n\n/**\n * Update page and map for current restaurants.\n */\n//const updateRestaurants = () => {\nvar updateRestaurants = function updateRestaurants() {\n  var cSelect = document.getElementById('cuisines-select');\n  var nSelect = document.getElementById('neighborhoods-select');\n\n  var cIndex = cSelect.selectedIndex;\n  var nIndex = nSelect.selectedIndex;\n\n  var cuisine = cSelect[cIndex].value;\n  var neighborhood = nSelect[nIndex].value;\n\n  restaurantDB.fetchRestaurantsByCuisineAndNeighborhood(cuisine, neighborhood).then(function (restaurants) {\n    resetRestaurants(restaurants);\n    fillRestaurantsHTML(restaurants);\n  });\n};\n\n/**\n * Clear current restaurants, their HTML and remove their map markers.\n */\nvar resetRestaurants = function resetRestaurants(restaurants) {\n  // Remove all restaurants\n  self.restaurants = [];\n  var ul = document.getElementById('restaurants-list');\n  ul.innerHTML = '';\n\n  // Remove all map markers\n  if (self.markers) {\n    self.markers.forEach(function (m) {\n      return m.remove();\n    });\n  }\n  self.markers = [];\n  self.restaurants = restaurants;\n};\n\n/**\n * Create all restaurants HTML and add them to the webpage.\n */\n//const fillRestaurantsHTML = (restaurants = self.restaurants) => {\nvar fillRestaurantsHTML = function fillRestaurantsHTML() {\n  var ul = document.getElementById('restaurants-list');\n  self.restaurants.forEach(function (restaurant) {\n    ul.append(createRestaurantHTML(restaurant));\n  });\n  addMarkersToMap();\n\n  // Don't include mapp attributions in the tab sequence\n  removeMapAttributionsFromTabOrder();\n};\n\n/**\n * Don't include map attributions in the tab order\n */\nvar removeMapAttributionsFromTabOrder = function removeMapAttributionsFromTabOrder() {\n  var linkList = document.querySelectorAll(\".leaflet-control-attribution a\");\n  linkList.forEach(function (link) {\n    link.setAttribute('tabindex', '-1');\n  });\n};\n\n/**\n * Create restaurant HTML.\n */\nvar createRestaurantHTML = function createRestaurantHTML(restaurant) {\n  var li = document.createElement('li');\n\n  var image = document.createElement('img');\n  image.className = 'restaurant-img';\n  image.src = _dbhelper.DBHelper.imageUrlForRestaurant(restaurant).replace(\".jpg\", \"-320_sm.jpg\");\n\n  // Add an alt attribute for images. Use \"image_desc\" if available, if not use\n  // restaurant name.\n  image.alt = restaurant.image_desc || restaurant.name;\n\n  li.append(image);\n\n  var name = document.createElement('h1');\n  name.innerHTML = restaurant.name;\n  li.append(name);\n\n  var neighborhood = document.createElement('p');\n  neighborhood.innerHTML = restaurant.neighborhood;\n  li.append(neighborhood);\n\n  var address = document.createElement('p');\n  address.innerHTML = restaurant.address;\n  li.append(address);\n\n  // Put the link text in a paragraph tag for vertiacl\n  var more = document.createElement('a');\n  more.setAttribute('aria-label', restaurant.name + ' Details');\n  var moreP = document.createElement('p');\n  moreP.innerHTML = 'View Details';\n  more.append(moreP);\n  more.href = _dbhelper.DBHelper.urlForRestaurant(restaurant);\n  li.append(more);\n\n  return li;\n};\n\n/**\n * Add markers for current restaurants to the map.\n */\n//const addMarkersToMap = (restaurants = self.restaurants) => {\nvar addMarkersToMap = function addMarkersToMap() {\n  self.restaurants.forEach(function (restaurant) {\n    // Add marker to the map\n    var marker = _dbhelper.DBHelper.mapMarkerForRestaurant(restaurant, self.newMap);\n    marker.on(\"click\", onClick);\n    function onClick() {\n      window.location.href = marker.options.url;\n    }\n    self.markers.push(marker);\n  });\n};\n/* addMarkersToMap = (restaurants = self.restaurants) => {\n  restaurants.forEach(restaurant => {\n    // Add marker to the map\n    const marker = DBHelper.mapMarkerForRestaurant(restaurant, self.map);\n    google.maps.event.addListener(marker, 'click', () => {\n      window.location.href = marker.url\n    });\n    self.markers.push(marker);\n  });\n} */\n\n// Expose updateRestaurants for use in window events\nwindow.updateRestaurants = updateRestaurants;\n\nexports.updateRestaurants = updateRestaurants;\n\n},{\"../lib/dbhelper.js\":2}],2:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * Common database helper functions.\r\n */\n\n/*DATABASE_URL()\r\nconst DATABASE_PORT = 1337;\r\nconst DATABASE_URL = `http://localhost:${DATABASE_PORT}/restaurants`;\r\n\r\nconst LOCAL_DB = 'restaurant-reviews';\r\nconst LOCAL_VERSION = 1;\r\n*/\n\nvar DBHelper = exports.DBHelper = function () {\n  function DBHelper() {\n    _classCallCheck(this, DBHelper);\n\n    var DATABASE_PORT = 1337;\n    var DATABASE_URL = 'http://localhost:' + DATABASE_PORT + '/restaurants';\n\n    this.url = DATABASE_URL;\n\n    this.restaurants = fetch(this.url).then(function (response) {\n      return response.json();\n    });\n\n    this.neighborhoods = this.restaurants.then(function (data) {\n      var a = [];\n      data.forEach(function (r) {\n        if (!a.includes(r.neighborhood)) a.push(r.neighborhood);\n      });\n      return a;\n    });\n\n    this.cuisines = this.restaurants.then(function (data) {\n      var a = [];\n      data.forEach(function (r) {\n        if (!a.includes(r.cuisine_type)) a.push(r.cuisine_type);\n      });\n      return a;\n    });\n  }\n\n  /**\r\n   * Fetch all restaurants.\r\n   */\n\n\n  _createClass(DBHelper, [{\n    key: 'fetchRestaurants',\n    value: function fetchRestaurants() {\n      return this.restaurants;\n    }\n\n    /**\r\n     * Fetch a restaurant by its ID.\r\n     */\n\n  }, {\n    key: 'fetchRestaurantById',\n    value: function fetchRestaurantById(id) {\n      return this.restaurants.then(function (restaurants) {\n        return restaurants.filter(function (r) {\n          return r.id == id;\n        })[0];\n      });\n    }\n\n    /**\r\n     * Fetch restaurants by a cuisine type with proper error handling.\r\n     */\n\n  }, {\n    key: 'fetchRestaurantsByCuisine',\n    value: function fetchRestaurantsByCuisine(cuisine) {\n      return this.restaurants.then(function (restaurants) {\n        return restaurants.filter(function (r) {\n          return r.cuisine_type == cuisine;\n        });\n      });\n    }\n\n    /**\r\n     * Fetch restaurants by a neighborhood with proper error handling.\r\n     */\n\n  }, {\n    key: 'fetchNeighborhoods',\n    value: function fetchNeighborhoods() {\n      return this.neighborhoods;\n    }\n\n    /**\r\n     * Fetch restaurants by a cuisine and a neighborhood with proper error handling.\r\n     */\n\n  }, {\n    key: 'fetchRestaurantsByCuisineAndNeighborhood',\n    value: function fetchRestaurantsByCuisineAndNeighborhood(cuisine, neighborhood) {\n      return this.restaurants.then(function (restaurants) {\n        return restaurants.filter(function (r) {\n          return (cuisine == 'all' || r.cuisine_type == cuisine) && (neighborhood == 'all' || r.neighborhood == neighborhood);\n        });\n      });\n    }\n\n    /**\r\n     * Fetch all neighborhoods with proper error handling.\r\n     */\n\n  }, {\n    key: 'fetchNeighborhoods',\n    value: function fetchNeighborhoods() {\n      return this.neighborhoods;\n    }\n\n    /**\r\n     * Fetch all cuisines with proper error handling.\r\n     */\n\n  }, {\n    key: 'fetchCuisines',\n    value: function fetchCuisines() {\n      return this.cuisines;\n    }\n\n    /**\r\n     * Restaurant page URL.\r\n     */\n\n  }], [{\n    key: 'urlForRestaurant',\n    value: function urlForRestaurant(restaurant) {\n      return './restaurant.html?id=' + restaurant.id;\n    }\n\n    /**\r\n     * Restaurant image URL.\r\n     */\n\n  }, {\n    key: 'imageUrlForRestaurant',\n    value: function imageUrlForRestaurant(restaurant) {\n      return './img/' + (restaurant.photograph ? restaurant.photograph : restaurant.id) + '.jpg';\n    }\n\n    /**\r\n     * Map marker for a restaurant.\r\n     */\n\n  }, {\n    key: 'mapMarkerForRestaurant',\n    value: function mapMarkerForRestaurant(restaurant, map) {\n      // https://leafletjs.com/reference-1.3.0.html#marker\n      var marker = new L.marker([restaurant.latlng.lat, restaurant.latlng.lng], { title: restaurant.name,\n        alt: restaurant.name,\n        url: this.urlForRestaurant(restaurant)\n      });\n      marker.addTo(map);\n      return marker;\n    }\n    /* static mapMarkerForRestaurant(restaurant, map) {\r\n      const marker = new google.maps.Marker({\r\n        position: restaurant.latlng,\r\n        title: restaurant.name,\r\n        url: DBHelper.urlForRestaurant(restaurant),\r\n        map: map,\r\n        animation: google.maps.Animation.DROP}\r\n      );\r\n      return marker;\r\n    } */\n\n  }]);\n\n  return DBHelper;\n}();\n\n},{}]},{},[1]);\n"]}